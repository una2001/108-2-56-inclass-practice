tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
# tpe_highSchools
regex_hs1st <- "(臺?台?北市立第一女子?高?級?中學?)"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高|級|中|學)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高?|級|中?|學)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高?級中?學)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高級?中學?)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高級?中學?)"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
schoollevels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels)
# tpe_highSchools
schoollevels2 = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學", "北一女" )
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels2)
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
# tpe_highSchools
regex_hs1st <- "(臺?台?北市立第一女子?高?級?中學?)"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高|級|中|學)?"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
schoollevels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels)
# tpe_highSchools
schoollevels2 = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學", "北一女" )
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels2)
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
# tpe_highSchools
regex_hs1st <- "(臺?台?北市立第一女子?高?級?中學?)"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "(高|級|中|學)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
schoollevels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels)
# tpe_highSchools
source("https://www.dropbox.com/s/aow5y2772r8ratb/regexPatternCheck.R?dl=1", encoding = "UTF-8")
jsonlite::fromJSON("https://www.dropbox.com/s/8wgdef4v44k1w0g/tpe_highSchools.json?dl=1") -> tpe_highSchools
tpe_highSchools <- factor(tpe_highSchools)
schoollevels = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學")
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels)
# tpe_highSchools
schoollevels2 = c("臺北市立第一女中","台北市立第一女子高級中學","中山女中","中山女高", "台北市立中山女中", "臺北市立中山女子高級中學","國立政大附中", "國立政治大學附屬高級中學", "北一女" )
tpe_highSchools <- factor(tpe_highSchools, levels = schoollevels2)
tpe_highSchools[[680]] <- "北一女"
tpe_highSchools[[681]] <- "北一女"
tpe_highSchools[[682]] <- "北一女"
tpe_highSchools[[683]] <- "北一女"
tpe_highSchools[[684]] <- "北一女"
tpe_highSchools[[685]] <- "北一女"
tpe_highSchools[[686]] <- "北一女"
tpe_highSchools[[687]] <- "北一女"
tpe_highSchools[[688]] <- "北一女"
tpe_highSchools[[689]] <- "北一女"
# tpe_highSchools
regex_hs1st <- "(臺?台?北市立第一女子?高?級?中學?)"
regex_hs1st
check_regexRestriction("臺台北市立第一女子高級中學",regex_hs1st)
currentLevels <- levels(tpe_highSchools)
str_replace(currentLevels,regex_hs1st,"北一女") -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "[高|級|中|學]$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
regex_hsTitle <- "[高級中學]$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
View(data228)
str(data288)
str(data228)
View(data228)
str(data228)
# data228[c("全宗名編號","年")]
levels(data228$檔號)
str(data228)
data228$全宗名編號 <- data228$檔號
# data228[c("全宗名編號","年")]
data228$全宗名編號 <- data228$檔號
data228$全宗名編號
# data228[c("全宗名編號","年")]
View(data228)
str(data228)
levels(data228$)
data228$全宗名編號 <-
str_extract(data228$檔號,
"[:upper:][:graph:]+[:upper:](?=/)")
data228$全宗名編號<-factor(data228$全宗名編號)
str(data228$全宗名編號)
View(data228$全宗名編號)
data228$全宗名編號 <-
str_extract(data228$檔號,1,11)
regex_hsTitle <- "(高?級?中?學?)$"
# regex_hsTitle
check_regexRestriction("高級中學",regex_hsTitle)
currentLevels <- levels(tpe_highSchools)
str_remove(
currentLevels,regex_hsTitle
) -> levels(tpe_highSchools)
levels(tpe_highSchools)
View(data228$附註)
regex1 <- str_sub(data228$檔號, 1, 11)
regex1 <- str_sub(data228$檔號, 15, 16)
data228$全宗名編號 <-
str_extract(data228$檔號,regex1)
data228$年 <- str_sub(data228$檔號, 15, 16)
data228$年
str_extract(data228$檔號, regex2)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228$全宗名編號 <- str_sub(data228$檔號, 1, 11)
data228$年 <- str_sub(data228$檔號, 15, 16)
# data228[c("全宗名編號","年")]
data228[c("全宗名編號","年")]
data228$全宗名編號 <- as.factor(str_sub(data228$檔號, 1, 11))
data228$年 <- as.integer(str_sub(data228$檔號, 15, 16))
data228[c("全宗名編號","年")]
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228$全宗名編號 <- as.factor(str_sub(data228$檔號, 1, 11))
data228$年 <- as.integer(str_sub(data228$檔號, 15, 16))
data228[c("全宗名編號","年")]
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
str(courseStructure)
majorGradeCombos <- courseStructure$應修系級
View(courseStructure$應修系級)
str(courseStructure)
majorGradeCombos <- courseStructure$應修系級
majorGradeCombos <- factor(data1<-data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
victims <- data228$`個人名稱`[data1])
majorGradeCombos <- courseStructure$應修系級
majorGradeCombos <- factor(majorGradeCombos)
levels(majorGradeCombos)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
entranceYear
major
View(courseStructure)
View(courseStructure)
data1 <- data228$附註 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
victims <- data228$個人名稱[data1]
victims
pick_note<-data228$`檔號`[data228$`附註`=="表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"]
pick_name<-data228$`個人名稱`[data228$檔號==pick_note]
victims<-levels(factor(pick_name))
victims
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228$全宗名編號 <- as.factor(str_sub(data228$檔號, 1, 11))
data228$年 <- as.integer(str_sub(data228$檔號, 15, 16))
data228[c("全宗名編號","年")]
data1 <- data228$附註 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
victims <- data228$個人名稱[data1]
victims
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228$全宗名編號 <- as.factor(str_sub(data228$檔號, 1, 11))
data228$年 <- as.integer(str_sub(data228$檔號, 15, 16))
data228[c("全宗名編號","年")]
data1 <- data228$附註 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data1 <- data228$檔號 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
victims <- data228$個人名稱[data1]
victims
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
data228$全宗名編號 <- as.factor(str_sub(data228$檔號, 1, 11))
data228$年 <- as.integer(str_sub(data228$檔號, 15, 16))
data228[c("全宗名編號","年")]
data1 <- data228$附註 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
data2 <- data228$檔號 == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
victims <- data228$個人名稱[data1]
victims
unique(str_extract(courseStructure$`應修系級`,"[\u4E00-\u9FFF]+[:graph:]")) -> majorGradeCombos
majorGradeCombos
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
jsonlite::fromJSON("https://www.dropbox.com/s/7myzzdnoor21hye/courseStructure2.json?dl=1") -> courseStructure
source("https://www.dropbox.com/s/pc8qg2phs3ypcr8/midterm108_2.R?dl=1", encoding="UTF-8")
regex_final <-"((資工|歷史|行政|經濟|不動產城鄉|會計|金融|企管|統計|社學|財政|中文|修運|通訊|電機)系[1-4]|法律學系法學組[1-4]|法律學系司法組[1-4]|法律學系財經法組[1-4])"
majorGradeCombos <-str_extract(courseStructure$`應修系級`,regex_final)
majorGradeCombos
knitr::opts_chunk$set(echo = TRUE)
# p=1.2的需求量
p=1.2
qd <- 10-5*p # 小心是5*p, 不能寫5p
# p=1.3的需求量
p=1.3
qd <- 10-5*p
# p=1.4的需求量
p=1.4
qd <- 10-5*p
demand <- # 創造一個物件叫demand
function(p){ # 定義這個物件為函數
q_d <- 10-5*p # 小心是5*p, 不能寫5p
}
# p=1.2的需求量
demand(1.2)
# p=1.3的需求量
demand(1.3)
# p=1.4的需求量
demand(1.4)
demand_return <-
function(p){
q_d <- 10-5*p
return(q_d)
}
# 印在螢幕，但Global Environment並不會有q_d
demand_return(1.2)
.Last.value
# 要長久存在Global Environment要指定物件名稱（不要求與q_d同名）
demand_return(1.2) -> q_d1.2
demand_return(1.2) # 相當於
4
demand_return(1.2) -> q_d1.2 # 相當於
4 -> q_d1.2
q_d <- 5
demand_return(p=1.2)
print(q_d)
dateInput <- today()
library(lubridate)
dateInput <- today()
locationInput <- "新北市"
library(lubridate)
dateInput <- lubridate::today()
locationInput <- "新北市"
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
library(lubridate)
dateInput <- lubridate::today()
locationInput <- "新北市"
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
# 找出符合地點的天氣資訊：weatherAtLocation
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location # 可挑出locationInput的「要/不要」向量
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
# 在weatherAtLocation找出符合時間的天氣資訊
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
View(weather_next36hours)
View(weatherAtLocation)
View(weatherAtLocation[[2]][[1]])
View(weatherAtLocation[[2]][[2]])
View(weatherAtLocation[[2]][[3]])
weatherAtLocation
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location]
View(weatherAtLocation[[2]][[2]])
# 找出符合地點的天氣資訊：weatherAtLocation
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location # 可挑出locationInput的「要/不要」向量
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
# 在weatherAtLocation找出符合時間的天氣資訊
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
askSilly_weather <- function(locationInput,dateInput){
jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
weather_next36hours
(weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location
weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
(weatherAtLocation$elementName=="MaxT") ->
pick_MaxT
(weatherAtLocation$elementName=="MinT") ->
pick_MinT
weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT
glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}
askSilly_weather("臺中市",today())
askSilly_weather("花蓮縣",today())
what_time_it_is("Europe/Paris")
what_time_it_is("Europe/Paris")
now()
what_time_it_is("Europe/Paris")
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
class(demand_return)
# 查詢函數formals arguments要求
formals(askSilly_weather)
# 查詢函數主體
body(askSilly_weather)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-03"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics$functionsCreated$demand(1.2)
learning_topics <-
list(
subject="函數",
date=lubridate::ymd("2020-06-06"),
functionsCreated=list(
demand=demand_return # 等號右邊是呼叫demand_return的定義值，也就是function(...){...}值定義本身。
)
)
learning_topics$functionsCreated$demand(1.2)
learning_topics
typeof(demand_return)
class(demand_return())
class(demand_return)
typeof(demand_return)
# 查詢函數執行所要求環境
environment(demand_return)
# 若函數執行需要Global environment已存在某些物件，查詢需要哪些物件
codetools::findGlobals(demand_return)
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
intercept <- 10
slope <- -5
myDemand <- function(p){
q_d <- intercept + slope*p
return(q_d)
}
environment(demand_return)
environment(myDemand)
codetools::findGlobals(demand_return)
codetools::findGlobals(myDemand)
# myDemand對Global environment的要求多了intercept及slope
# 移除global environment裡的intercept及slope
rm(intercept, slope)
# 移除global environment裡的intercept及slope
rm(intercept, slope)
demand_return(1.2) # 維持正常運作
myDemand(1.2) # 無法運作
intercept <- 10
slope <- -5
myDemand(1.2)
intercept <- 10
slope <- -5
myDemand(1.2)
intercept <- 10
slope <- -5
myDemand(1.2)
slope <- -1
myDemand(1.2)
slope <- -1
myDemand(1.2) # 10-1*p
intercept <- 5
slope <- -1.2
myDemand(1.2) # 5-1.2*p
myDemand2 <- function(p, intercept=10, slope=-5){
q_d <- intercept + slope*p
return(q_d)
}
environment(myDemand2)
findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
codetools::findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
environment(myDemand2)
codetools::findGlobals(myDemand2) # 不依靠global env裡的intercept/slope
myDemand2(1.2) # 使用預設值
myDemand2(1.2, slope=-1)
myDemand2(1.2, intercept=5, slope=-1.2)
if(condition){
Body for TRUE
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
# 之後才執行以下程式
if(
str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
warning("你所輸入的學號不正確")
}
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選:
length(vectorExample)
vectorExample[[1]]
vectorExample[[3]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
library(stringr)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
